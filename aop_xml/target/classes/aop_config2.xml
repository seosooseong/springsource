<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 1.어노테이션 사용 안하는 경우 객체생성 -->
	<!-- <bean id="product" class="com.company.aop.Product"/>  -->
	
	<!-- 2.(강추방법) 어노테이션 사용: @component@service@controller@repository -->
	<context:component-scan base-package="com.company.aop"/>
	
	
	<!-- AOP XML 설정 -->
	<aop:config>
		<aop:aspect ref="log">
			<!-- AOP를 적용할 기준을 명시 pointcut / 특정안하고 *(..) 는 모든 메소드 적용-->
			<aop:pointcut expression="execution(* com.company.aop.Product.getInfo())" id="pointcut"/>
			
			<!-- Advice할 메소드를 명시 -->
			<!-- <aop:before method="beforLog" pointcut-ref="pointcut"/>  -->
			<!-- <aop:after method="afterLog" pointcut-ref="pointcut"/> -->
			<!-- <aop:after-returning method="afterReturnLog" pointcut-ref="pointcut"/> -->
			<aop:after-throwing method="afterThrowLog" pointcut-ref="pointcut"/>
			<aop:around method="aroundLog" pointcut-ref="pointcut" />
		</aop:aspect>
	</aop:config>
</beans>
